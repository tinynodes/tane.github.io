<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Categories on tane.dev</title><link>https://tane.dev/categories/</link><description>Recent content in Categories on tane.dev</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><managingEditor>spam@tane.dev (Tane Piper)</managingEditor><webMaster>spam@tane.dev (Tane Piper)</webMaster><copyright>This work is copyright Tane Piper</copyright><atom:link href="https://tane.dev/categories/index.xml" rel="self" type="application/rss+xml"/><item><title>Announcing Formula - A Zero-Config Reactive Forms Library for Svelte</title><link>https://tane.dev/2021/02/announcing-formula-a-zero-config-reactive-forms-library-for-svelte/</link><pubDate>Sat, 13 Feb 2021 12:00:00 +0100</pubDate><author>spam@tane.dev (Tane Piper)</author><guid>https://tane.dev/2021/02/announcing-formula-a-zero-config-reactive-forms-library-for-svelte/</guid><description>Demo NPM Page Today I&amp;rsquo;m happy to announce the release of Svelte Formula - a new forms library for Svelte .
Formula is a Zero-Config library - what this means is that you do not have to pass any settings to the library itself to handle form validation and submission - it uses the validation properties of HTML5 forms directly, meaning you can create progressive, accessible forms first.
The library is for use with the use directive and can be bound to any element, not just &amp;lt;form&amp;gt; ones and the library automatically handles subscription and unsubscription to any form element with a name attribute.</description></item><item><title>Revisiting Dark patterns with the HTML &lt;dialog> tag</title><link>https://tane.dev/2021/02/revisiting-dark-patterns-with-the-html-dialog-tag/</link><pubDate>Mon, 08 Feb 2021 22:50:00 +0100</pubDate><author>spam@tane.dev (Tane Piper)</author><guid>https://tane.dev/2021/02/revisiting-dark-patterns-with-the-html-dialog-tag/</guid><description>Every once in a while I&amp;rsquo;ll see frontend developers tweet or blog about how great the HTML dialog tag is and each time I&amp;rsquo;m reminded me of an old Medium post I made a few years ago about its use.
The good news is in 2021 it&amp;rsquo;s much harder to use it to crash a user&amp;rsquo;s browser - in Firefox dialog.showModal is behind a flag so it has to be specifically enabled by users.</description></item><item><title>WebSerial.app - Browser to USB Serial Communication With Svelte</title><link>https://tane.dev/2021/02/webserial.app-browser-to-usb-serial-communication-with-svelte/</link><pubDate>Fri, 05 Feb 2021 21:00:00 +0100</pubDate><author>spam@tane.dev (Tane Piper)</author><guid>https://tane.dev/2021/02/webserial.app-browser-to-usb-serial-communication-with-svelte/</guid><description>After my previous experiments with the Web Serial API, I started experimenting with Svelte .
Within a couple of days I have created https://webserial.app/ - the Web Serial Controller app.
The interface might seem familiar - it&amp;rsquo;s based on XP.css - a Windows XP CSS theme. It was inspired by some of the Serial hardware software used in the 00&amp;rsquo;s.
The application is fully open source and features:
Fully connected state - use the screens or keyboard shortcuts to connect and disconnect from devices with shared state Filter devices by vendor ID with a fully searchable list of all hardware vendors A draggable interface XP-like interface Options storage in localStorage Send text messages to any connected device</description></item><item><title>Web Serial API with RxJS - Two-Way Reactive Communication between Browser and Serial Hardware</title><link>https://tane.dev/2021/01/web-serial-api-with-rxjs-two-way-reactive-communication-between-browser-and-serial-hardware/</link><pubDate>Sat, 30 Jan 2021 12:00:00 +0100</pubDate><author>spam@tane.dev (Tane Piper)</author><guid>https://tane.dev/2021/01/web-serial-api-with-rxjs-two-way-reactive-communication-between-browser-and-serial-hardware/</guid><description>Demo Link Demo Source Version 89 of Chrome and Edge browsers have released the Web Serial API unflagged which means as user it&amp;rsquo;s now available for general use rather than being locked behind experimental flags (if you&amp;rsquo;re on an earlier version you can enable Experimental Web Platform features in chrome://flags)
The API allows for communication between the browser and supported serial hardware such as Arduino or RaspberryPi over USB Serial connection - the device registers as available to the browser and a port can be opened.</description></item><item><title>Create your own Dark Mode Detection Observable using RxJS and Media Queries</title><link>https://tane.dev/2021/01/create-your-own-dark-mode-detection-observable-using-rxjs-and-media-queries/</link><pubDate>Wed, 27 Jan 2021 21:00:00 +0100</pubDate><author>spam@tane.dev (Tane Piper)</author><guid>https://tane.dev/2021/01/create-your-own-dark-mode-detection-observable-using-rxjs-and-media-queries/</guid><description>Demo Link One of the more recent features available in browsers is ability to do CSS Media Queries based on user theme &amp;amp; accessibility settings in the operating system - for example using @media (prefers-color-scheme: dark) (see prefers-color-scheme ) you can check if the users OS theme is currently in Dark Mode and use this to set a websites theme accordingly.
The query is also available in JavaScript using the window.</description></item></channel></rss>