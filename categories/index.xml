<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Categories on tane.dev</title>
    <link>https://tane.dev/categories/</link>
    <description>Recent content in Categories on tane.dev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <managingEditor>spam@tane.dev (Tane Piper)</managingEditor>
    <webMaster>spam@tane.dev (Tane Piper)</webMaster>
    <copyright>This work is copyright Tane Piper</copyright>
    
        <atom:link href="https://tane.dev/categories/index.xml" rel="self" type="application/rss+xml" />
    
    
    
    <item>
      <title>Validating data with JSON Schema, Angular and TypeScript</title>
      <link>https://tane.dev/2019/09/validating-data-with-json-schema-angular-and-typescript/</link>
      <pubDate>Wed, 18 Sep 2019 11:00:00 +0100</pubDate>
      <author>spam@tane.dev (Tane Piper)</author>
      <guid>https://tane.dev/2019/09/validating-data-with-json-schema-angular-and-typescript/</guid>
      <description>One common question I see with a lot of new TypeScript developers is how to handle runtime validation of data, using the types they have built.
The issue is web platform, as yet, does not support types. Typescript itself is a higher-level language built on top of JavaScript and uses a compiler to create compatible code for the web, node or other JS platforms - this means that types are only available at design time.</description>
    </item>
    
    <item>
      <title>Ngx-EditorJS library for Angular</title>
      <link>https://tane.dev/2019/05/ngx-editorjs-library-for-angular/</link>
      <pubDate>Fri, 10 May 2019 15:00:00 +0100</pubDate>
      <author>spam@tane.dev (Tane Piper)</author>
      <guid>https://tane.dev/2019/05/ngx-editorjs-library-for-angular/</guid>
      <description>Today I have published my first full Angular module - @tinynodes/ngx-editorjs on NPM.
The module is a set of features for Angular (7+) to create and control EditorJS instances.
A demo application is available to see the editor in action, and the source is also available in the @tinynodes monorepo.
Included Features The library exports several features once the NgxEditorJSModule has been included in your project.
NgxEditorJSDirective This is the main directive which can be used on any element with the [ngxEditorJS] selector and and id attribute.</description>
    </item>
    
    <item>
      <title>Providing injectable features to Angular modules</title>
      <link>https://tane.dev/2019/03/providing-injectable-features-to-angular-modules/</link>
      <pubDate>Thu, 14 Mar 2019 20:30:00 +0100</pubDate>
      <author>spam@tane.dev (Tane Piper)</author>
      <guid>https://tane.dev/2019/03/providing-injectable-features-to-angular-modules/</guid>
      <description>Working with Angular and Typescript; as I have refactored and re-written components I&amp;rsquo;ve been learning to take advantage of one of the more powerful features - dependency injection.
Building Angular components, most developers will have already used this to inject features like the HTTP client or the FormBuilder to be used in a component. A common service example might look like this:
1 2 3 4 5 6 7 8 9 10 11 12  import { Injectable } from &amp;#39;@angular/core&amp;#39;; import { HttpClient, HttpResponse } from &amp;#39;@angular/common/http&amp;#39;; import { Observable } from &amp;#39;rxjs&amp;#39;; @Injectable() export class RequestService { constructor(private readonly http: HttpClient) {} public getExample(): Observable&amp;lt;HttpResponse&amp;gt; { return this.</description>
    </item>
    
    <item>
      <title>New blog (&#39;Hey I&#39;m Moving From Medium&#39;)</title>
      <link>https://tane.dev/2019/03/new-blog-hey-im-moving-from-medium/</link>
      <pubDate>Tue, 12 Mar 2019 19:40:00 +0100</pubDate>
      <author>spam@tane.dev (Tane Piper)</author>
      <guid>https://tane.dev/2019/03/new-blog-hey-im-moving-from-medium/</guid>
      <description>Buying a new domain is always a good excuse to do something with it, so of course grabbing my .dev seemed like a perfect idea to set up a new blog. Also recently I&amp;rsquo;ve been dissatisfied with the way Medium has dealt with recent changes (although I&amp;rsquo;m not going to go into all the reasons except to say I&amp;rsquo;d rather own and control all my content).
The site is Markdown powered, generated with Hugo and served via GitHub Pages with a CI deployment.</description>
    </item>
    
  </channel>
</rss>
